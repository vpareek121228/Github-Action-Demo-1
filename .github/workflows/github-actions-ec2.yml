name: Comprehensive Web Deployment
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Full Web Deployment Diagnostics
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Prepare Target Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Robust directory preparation
            set -e
            
            # Ensure user is in apache group
            sudo usermod -a -G apache ${{ secrets.USERNAME }}
            
            # Create directories with explicit permissions
            sudo mkdir -p /var/www/html
            
            # Set ownership and permissions
            sudo chown -R apache:apache /var/www/html
            sudo chmod -R 775 /var/www/html  # More permissive group access
            
            # Add current user to apache group
            echo "Current user groups:"
            groups
            
            # Verify directory setup
            ls -ld /var/www/html
            ls -l /var/www/html
      
      - name: Deploy Web Files
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: /var/www/html
          EXCLUDE: |
            .git
            .github
            .gitignore
            README.md
      
      - name: Configure Web Server and Security
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Comprehensive server configuration
            set -e
            
            # Update system packages
            sudo yum update -y
            
            # Install and configure web server and firewall
            sudo yum install -y httpd mod_ssl firewalld
            
            # Ensure current user is in apache group
            sudo usermod -a -G apache ${{ secrets.USERNAME }}
            
            # Set correct permissions with group write access
            sudo chown -R apache:apache /var/www/html
            sudo chmod -R 775 /var/www/html  # Allows group write
            
            # Configure firewall (with error handling)
            sudo systemctl enable firewalld || true
            sudo systemctl start firewalld || true
            
            # Attempt to configure firewall rules
            sudo firewall-cmd --permanent --add-service=http || true
            sudo firewall-cmd --permanent --add-service=https || true
            sudo firewall-cmd --permanent --add-port=443/tcp || true
            sudo firewall-cmd --reload || true
            
            # Configure SELinux
            sudo setsebool -P httpd_can_network_connect on
            sudo restorecon -R /var/www/html
            
            # Start and enable Apache
            sudo systemctl restart httpd
            sudo systemctl enable httpd
            
            # Detailed diagnostics
            echo "=== System Deployment Report ==="
            echo "Date: $(date)"
            
            echo ""
            echo "--- Current User Groups ---"
            groups
            
            echo ""
            echo "--- Directory Permissions ---"
            ls -ld /var/www/html
            ls -l /var/www/html
            
            echo ""
            echo "--- Web Server Status ---"
            sudo systemctl status httpd || true
      
      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Comprehensive deployment verification
            
            # Verify directory access
            echo "Checking directory access:"
            ls -l /var/www/html
            
            # Check web server response
            curl -I http://localhost || echo "Web server not responding"
            
            # Verify file deployment
            if [ "$(ls -A /var/www/html)" ]; then
                echo "Files successfully deployed"
            else
                echo "ERROR: No files found in deployment directory"
                exit 1
            fi
